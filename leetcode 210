Leetcode 210
Code:
class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        if(numCourses==1)
            return new int[1];
        int[] indegree=new int[numCourses];
        int []order=new int[numCourses];
        int index=0;
        for(int i=0;i<prerequisites.length;i++){
            indegree[prerequisites[i][0]]++;
        }
        Queue<Integer> q=new LinkedList<>();
        for(int i=0;i<indegree.length;i++){
            if(indegree[i]==0){
                order[index++]=i;
                q.offer(i);
            }
        }
        while(!q.isEmpty()){
            int pre=q.poll();
            for(int i=0;i<prerequisites.length;i++){
                if(pre==prerequisites[i][1]){
                    indegree[prerequisites[i][0]]--;
                    if(indegree[prerequisites[i][0]]==0){
                        order[index++]=prerequisites[i][0];
                        q.offer(prerequisites[i][0]);
                    }
                }
            }
        }
        return index==numCourses?order:new int[0];
    }
}
注意BFS的思路,队列拓扑排序解决
