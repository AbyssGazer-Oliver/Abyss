Leetcode 79
Code:
class Solution {
    public boolean exist(char[][] board, String word) {
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(DFS(board,i,j,word,0)){
                    return true;
                }
            }
        }
        return false;
    }
    
    boolean DFS(char[][] board, int i, int j, String word, int pos){
        if(pos==word.length()){
            return true;
        }
        if(i<0||j<0||i>=board.length||j>=board[0].length)
            return false;
        if(board[i][j]!=word.charAt(pos)){
            return false;
        }
        board[i][j]='*';
        boolean res=DFS(board,i-1,j,word,pos+1)||DFS(board,i,j-1,word,pos+1)||DFS(board,i+1,j,word,pos+1)||DFS(board,i,j+1,word,pos+1);
        board[i][j]=word.charAt(pos);
        return res;
    }
}
不需要维护visited数组节省空间，必须会这题
