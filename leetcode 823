Leetcode 823
Code:
class Solution {
    public int numFactoredBinaryTrees(int[] arr) {
        Arrays.sort(arr);
        HashMap<Integer,Long> map=new HashMap<>();
        long res=1;
        map.put(arr[0],res);
        for(int i=1;i<arr.length;i++){
            long sum=1;
            for(int j=0;j<i;j++){
                if(arr[i]%arr[j]==0&&map.containsKey(arr[i]/arr[j])){
                    sum+=map.get(arr[i]/arr[j])*map.get(arr[j]);
                }
            }
            map.put(arr[i],sum);
            res+=sum;
        }
        return (int)(res%1000000007);
    }
}

一个dp的思路
