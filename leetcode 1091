Leetcode 1091
Code:
class Solution {
    int [][]dir=new int[][]{{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1},{0,-1},{-1,-1}};
    public int shortestPathBinaryMatrix(int[][] grid) {
        int m=grid.length,n=grid[0].length;
        if(grid[0][0]==1||grid[m-1][n-1]==1)
            return -1;
        Deque<int[]> queue=new LinkedList<>();
        queue.add(new int[]{0,0});
        int res=0;
        grid[0][0]=1;
        while(!queue.isEmpty()){
            int size=queue.size();
            for(int i=0;i<size;i++){
                int []a=queue.remove();
                if(a[0]==m-1&&a[1]==n-1)
                    return 1+res;
                for(int j=0;j<8;j++){
                    int x=a[0]+dir[j][0];
                    int y=a[1]+dir[j][1];
                    if(x>=0&&x<m&&y>=0&&y<n&&grid[x][y]==0){
                        queue.add(new int[]{x,y});
                        grid[x][y]=1;
                    }
                }
            }
            res++;
        }
        return -1;
    }
}
复习BFS
