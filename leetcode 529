Leetcode 529
Code:
class Solution {
    int[][] dir=new int[][]{{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1},{0,-1},{-1,-1}};
    private int hasMine(char[][] board, int i, int j) {
        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length)
            return 0;
        return board[i][j] == 'M' ? 1 : 0;
    }

    private int findAdjMineNum(char[][] board, int i, int j) {
        int res=0;
        for(int k=0;k<8;k++){
            res+=hasMine(board,i+dir[k][0],j+dir[k][1]);
        }
        return res;
    }

private void updateOneSquare(char[][] board, int i, int j) {
    if (i < 0 || i >= board.length || j < 0 || j >= board[0].length
            || board[i][j] != 'E')
        return;
    int adjMineNum = findAdjMineNum(board, i, j);
    if (adjMineNum > 0)
        board[i][j] = (char) ('0' + adjMineNum);
    else {
        board[i][j] = 'B';
        for(int k=0;k<8;k++){
            updateOneSquare(board,i+dir[k][0],j+dir[k][1]);
        }
    }
}

public char[][] updateBoard(char[][] board, int[] click) {
    int i = click[0], j = click[1];
    if (board[i][j] == 'M')
        board[i][j] = 'X';
    else
        updateOneSquare(board, i, j);
    return board;
}
}

DFS和BFS改版
