Leetcode 473
Code:
class Solution {
    public boolean makesquare(int[] matchsticks) {
        Arrays.sort(matchsticks);
        int n=matchsticks.length;
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=matchsticks[i];
        }
        if(sum%4!=0)
            return false;
        int squarelen=sum/4;
        int []side=new int[]{squarelen,squarelen,squarelen,squarelen};
        return dfs(matchsticks,side,n-1);
    }
    private boolean dfs(int[] matchsticks,int[] side, int index){
        if(index==-1)
            return side[0]==side[1]&&side[0]==side[2]&&side[0]==side[3];
        for(int i=0;i<side.length;i++){
            if(matchsticks[index]<=side[i]){
                side[i]-=matchsticks[index];
                if(dfs(matchsticks,side,index-1))
                    return true;
                side[i]+=matchsticks[index];
            }
        }
        return false;
    }
}

回溯法考虑多个解
