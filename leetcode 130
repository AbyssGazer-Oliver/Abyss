Leetcode 130
Code:
class Solution {
    private int[][] dir=new int[][]{{-1,0},{0,1},{1,0},{0,-1}};
    public void solve(char[][] board) {
        int m=board.length,n=board[0].length;
        for(int j=0;j<board[0].length;j++){
            if(board[0][j]=='O')
                BFS(board,0,j);
        }
        for(int j=0;j<board[0].length;j++){
            if(board[m-1][j]=='O')
                BFS(board,m-1,j);
        }
        for(int i=0;i<board.length;i++){
            if(board[i][0]=='O')
                BFS(board,i,0);
        }
        for(int i=0;i<board.length;i++){
            if(board[i][n-1]=='O')
                BFS(board,i,n-1);
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]=='O')
                    board[i][j]='X';
                if(board[i][j]=='1')
                    board[i][j]='O';
            }
        }
    }
    
    public void BFS(char[][] board,int l,int k){
        int m=board.length,n=board[0].length;
        Queue<int[]> q=new LinkedList<>();
        q.offer(new int[]{l,k});
        while(!q.isEmpty()){
            int[] cur=q.poll();
            board[cur[0]][cur[1]]='1';
            for(int i=0;i<4;i++){
                int x1=cur[0]+dir[i][0];
                int y1=cur[1]+dir[i][1];
                if(x1>=0&&x1<m&&y1>=0&&y1<n&&board[x1][y1]=='O'){
                    board[x1][y1]='1';
                    q.offer(new int[]{x1,y1});
                }
            }
        }
    }
}
标准的BFS，但要注意先换成别的符号
