Leetcode 16
Code:
class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int res=0, n=nums.length;
        res=nums[0]+nums[1]+nums[2];
        if(n==3)
            return res;
        for(int i=0;i<n-2;i++){
            int j=i+1, k=n-1;
            while(j<k){
                int sum=nums[i]+nums[j]+nums[k];
                if(Math.abs(res-target)>Math.abs(sum-target)){
                    res=sum;
                    if(res==target)
                        return res;
                }
                if(sum>target)
                    k--;
                else
                    j++; 
            }
        }
        return res;
    }
}
如果O(n^2)复杂度，那么要记住sort
