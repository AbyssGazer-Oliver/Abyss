Leetcode 658
Code:
class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        int start=0,end=arr.length-1;
        while(end-start>=k){
            if(Math.abs(arr[start]-x)>Math.abs(arr[end]-x))
                start++;
            else
                end--;
        }
        List<Integer> list=new ArrayList<>();
        for(int i=start;i<=end;i++)
            list.add(arr[i]);
        return list;
    }
}

two-pointer标准方法，
还要记住binary search的
class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {

        int left = 0, right = arr.length - k;
        while (left < right) {
            int midpoint = left + (right - left) / 2; // same as (left + right) / 2
            if (x - arr[midpoint] > arr[midpoint + k] - x) {
                left = midpoint + 1;
            }
            else {
                right = midpoint;
            }
        }

        List<Integer> result = new ArrayList<>(k);
        for (int i = left; i < left + k; i++) {
            result.add(arr[i]);
        }
        return result;
    }
}
