Leetcode 2008
Code:
class Solution {
    public long maxTaxiEarnings(int n, int[][] rides) {
        Map<Integer,List<int[]>> map=new HashMap<>();
        for(int[] ride:rides){
            map.putIfAbsent(ride[1],new ArrayList<int[]>());
            map.get(ride[1]).add(ride);
        }
        long []dp=new long[n+1];
        for(int i=1;i<=n;i++){
            dp[i]=dp[i-1];
            if(map.containsKey(i)){
                for(int[] ride:map.get(i)){
                    dp[i]=Math.max(dp[i],ride[1]-ride[0]+ride[2]+dp[ride[0]]);
                }
            }
        }
        return dp[n];
    }
}

https://leetcode.com/problems/maximum-earnings-from-taxi/solutions/2049982/java-time-o-n-space-o-n-dp/
