Leetcode 1048
Code:
class Solution {
    public int longestStrChain(String[] words) {
        if(words.length==1)
            return 1;
        Arrays.sort(words,(a,b)->a.length()-b.length());
        HashMap<String,Integer> map=new HashMap<>();
        int max=1;
        for(String word:words){
            map.put(word,1);
            for(int i=0;i<word.length();i++){
                StringBuilder sb=new StringBuilder(word);
                String w=sb.deleteCharAt(i).toString();
                if(map.containsKey(w)&&map.get(w)+1>map.get(word))
                    map.put(word,map.get(w)+1);
            }
            max=Math.max(max,map.get(word));
        }
        return max;
    }
}

DP用空间复杂度换时间复杂度
